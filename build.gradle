plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.openapi.generator" version "7.0.1"
}

ext {
    springCloudVersion = "2023.0.5"
}

group = 'org.tix'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
bootJar {
    archiveFileName = 'my-spring-boot-app_soa.jar' // Имя JAR-файла
}

tasks {
    bootJar {
        launchScript()
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.swagger.codegen.v3:swagger-codegen:3.0.56'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.4'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'javax.servlet:javax.servlet-api:3.0.1'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.example.api"
    modelPackage = "com.example.model"
    globalProperties = [
            modelDocs: 'false'
    ]
    typeMappings = [
            'OffsetDateTime': 'java.time.ZonedDateTime'
    ]
    importMappings = [
            'OffsetDateTime': 'java.time.ZonedDateTime'
    ]
    configOptions = [
            interfaceOnly: 'true',
            dateLibrary: 'java8',
            stringEnums: 'true',
            enumNameSuffix: 'null',
            "openApiNullable": 'false',

    ]
}

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/src/main/java"
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}